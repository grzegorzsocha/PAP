/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package pl.edu.pw.medcomplexsoft.gui;

import java.util.List;
import java.util.Vector;

import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;
import javax.persistence.TypedQuery;
import javax.swing.JOptionPane;

import pl.edu.pw.medcomplexsoft.database.Database;
import pl.edu.pw.medcomplexsoft.model.Appointment;
import pl.edu.pw.medcomplexsoft.model.Doctor;
import pl.edu.pw.medcomplexsoft.model.Person;
import pl.edu.pw.medcomplexsoft.model.Service;
import pl.edu.pw.medcomplexsoft.model.ServicePosition;
import pl.edu.pw.medcomplexsoft.model.Status;

/**
 *
 * @author hubert
 */
public class AppointmentDataView extends javax.swing.JDialog {
    private Appointment appointment;
    private boolean changed = false;
    private Person loggedUser;
    /**
     * Creates new form AppointmentDataView
     */
    public AppointmentDataView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public AppointmentDataView(java.awt.Frame parent, boolean modal, Appointment appointment, Person user) {
        super(parent, modal);
        initComponents();
        this.appointment = appointment;
        if(appointment.getStatus() == Status.REALISED || appointment.getStatus() == Status.CANCELLED){
            realisedButton.setEnabled(false);
            addNewServiceButton.setEnabled(false);
            deleteServiceButton.setEnabled(false);
        }
        loggedUser = user;
        if(!(loggedUser instanceof Doctor))
        {
            addNewServiceButton.setVisible(false);
            addServiceLabel.setVisible(false);
            realisedButton.setVisible(false);
            deleteServiceButton.setVisible(false);
            serviceComboBox.setVisible(false);
            amountLabel.setVisible(false);
            amountSpinner.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        patientNameLabel = new javax.swing.JLabel();
        doctorNameLabel = new javax.swing.JLabel();
        dataLabel = new javax.swing.JLabel();
        durationLabel = new javax.swing.JLabel();
        officeLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        realisedButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        servicesList = new javax.swing.JList<>();
        costLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        addNewServiceButton = new javax.swing.JButton();
        deleteServiceButton = new javax.swing.JButton();
        serviceComboBox = new javax.swing.JComboBox<>();
        addServiceLabel = new javax.swing.JLabel();
        amountLabel = new javax.swing.JLabel();
        amountSpinner = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Szczegóły wizyty");

        jLabel1.setText("Pacjent");

        jLabel2.setText("Lekarz");

        jLabel3.setText("Data wizyty");

        jLabel4.setText("Gabinet");

        jLabel5.setText("Czas trwania");

        jLabel6.setText("Status");

        patientNameLabel.setText("jLabel7");

        doctorNameLabel.setText("jLabel8");

        dataLabel.setText("jLabel9");

        durationLabel.setText("jLabel10");

        officeLabel.setText("jLabel11");

        statusLabel.setText("jLabel12");

        jButton1.setText("Zamknij");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        realisedButton.setText("Oznacz jako zrealizowna");
        realisedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                realisedButtonActionPerformed(evt);
            }
        });

        servicesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(servicesList);

        costLabel.setText("Koszt wizyty: 0 zł");
        costLabel.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        jLabel7.setText("Zrealizowane usługi:");
        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        addNewServiceButton.setText("Dodaj");
        addNewServiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewServiceButtonActionPerformed(evt);
            }
        });

        deleteServiceButton.setText("Usuń");
        deleteServiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteServiceButtonActionPerformed(evt);
            }
        });

        addServiceLabel.setText("Dodawanie usług");
        addServiceLabel.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        amountLabel.setText("Ilość:");

        amountSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(deleteServiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(costLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(39, 39, 39))))
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patientNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(officeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(statusLabel)
                            .addComponent(durationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(doctorNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addServiceLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(amountLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(amountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addNewServiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(serviceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(realisedButton)
                        .addGap(402, 402, 402))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(patientNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(doctorNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(dataLabel))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(durationLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(officeLabel))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(statusLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addServiceLabel)
                        .addGap(16, 16, 16)
                        .addComponent(serviceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amountLabel)
                            .addComponent(amountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addNewServiceButton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(realisedButton)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(costLabel)
                        .addGap(68, 68, 68))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(deleteServiceButton)
                        .addGap(182, 182, 182)
                        .addComponent(jButton1)
                        .addGap(43, 43, 43))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(changed) {
            int selection = JOptionPane.showConfirmDialog(this, "Czy potwierdzasz wprowadone zmiany?", "Potwierdzenie",
                                            JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(selection == JOptionPane.OK_OPTION) {
                EntityManager entityManager = Database.getEntityManager();
                EntityTransaction tx = entityManager.getTransaction();
                tx.begin();
                entityManager.merge(appointment);
                tx.commit();
            }

        }
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addNewServiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewServiceButtonActionPerformed
        Object item = serviceComboBox.getSelectedItem();
        Service service = ((ComboItem)item).getValue();
        ServicePosition servicePosition = new ServicePosition();
        servicePosition.setAmount((Integer)amountSpinner.getValue());
        servicePosition.setService(service);
        servicePosition.setAppointment(appointment);
        appointment.getServicesPositions().add(servicePosition);
        changed = true;
        fillListAndCalcCost();
    }//GEN-LAST:event_addNewServiceButtonActionPerformed

    private void deleteServiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteServiceButtonActionPerformed
        int selectedIndex = servicesList.getSelectedIndex();
        if(selectedIndex != -1)
        {
            appointment.getServicesPositions().remove(selectedIndex);
            fillListAndCalcCost();
            changed = true;
        } else {
            JOptionPane.showMessageDialog(this, "Nie wybrano usługi z listy", "Błąd", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteServiceButtonActionPerformed

    private void realisedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_realisedButtonActionPerformed
        appointment.setStatus(Status.REALISED);
        statusLabel.setText("Zrealizowana");
        changed = true;
    }//GEN-LAST:event_realisedButtonActionPerformed


    public boolean showDialog() {
        patientNameLabel.setText(appointment.getPatient().getFullName());
        doctorNameLabel.setText(appointment.getDoctor().getFullName());
        dataLabel.setText(appointment.getAppointmentDate().toString());
        durationLabel.setText(String.valueOf(appointment.getDuration()));
        officeLabel.setText(appointment.getOffice());
        String status = new String();
        switch(appointment.getStatus()) {
            case ACTIVE:
            status = "Zaplanowana";
            break;
            case REALISED:
            status = "Zrealizowana";
            break;
            case CANCELLED:
            status = "Anulowana";
            break;
        }
        statusLabel.setText(status);

        EntityManager entityManager = Database.getEntityManager();
        TypedQuery<Service> typedQuery = entityManager.createQuery("FROM Service", Service.class);
        List<Service> serviceObjectList = typedQuery.getResultList();
        serviceObjectList.forEach(p -> {
            serviceComboBox.addItem(new ComboItem(p));
        });
        fillListAndCalcCost();
        setVisible(true);
        return changed;
    }

    private void fillListAndCalcCost() {
        Vector<String> listData = new Vector<String>();
        double total_cost = 0;
        for(ServicePosition p : appointment.getServicesPositions())
        {
            double service_cost = p.getAmount() * p.getService().getPrice();
            listData.add(p.getService().getName() + " | Ilość: " + p.getAmount() + " | Wartość: " + service_cost + " zł");
            total_cost += service_cost;
        }
        costLabel.setText("Koszt wizyty: " + String.valueOf(total_cost) + " zł");
        servicesList.setListData(listData);
    }


    private class ComboItem {
        private Service service;

        public ComboItem(Service service)
        {
            this.service = service;
        }

        public Service getValue()
        {
            return this.service;
        }

        @Override
        public String toString()
        {
            return service.getName() + " - " + service.getPrice() + " zł";
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppointmentDataView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppointmentDataView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppointmentDataView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppointmentDataView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AppointmentDataView dialog = new AppointmentDataView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewServiceButton;
    private javax.swing.JLabel addServiceLabel;
    private javax.swing.JLabel amountLabel;
    private javax.swing.JSpinner amountSpinner;
    private javax.swing.JLabel costLabel;
    private javax.swing.JLabel dataLabel;
    private javax.swing.JButton deleteServiceButton;
    private javax.swing.JLabel doctorNameLabel;
    private javax.swing.JLabel durationLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel officeLabel;
    private javax.swing.JLabel patientNameLabel;
    private javax.swing.JButton realisedButton;
    private javax.swing.JComboBox<ComboItem> serviceComboBox;
    private javax.swing.JList<String> servicesList;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
}
