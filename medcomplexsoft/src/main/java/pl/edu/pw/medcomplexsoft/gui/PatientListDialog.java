/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package pl.edu.pw.medcomplexsoft.gui;

import java.util.List;
import java.util.Vector;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import javax.swing.JOptionPane;

import pl.edu.pw.medcomplexsoft.database.Database;
import pl.edu.pw.medcomplexsoft.model.Patient;

/**
 *
 * @author hubert
 */
public class PatientListDialog extends javax.swing.JDialog {

    /**
     * Creates new form PatientListDialog
     */
    public PatientListDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patientList = new javax.swing.JList<>();
        newButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        showDataButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lista pacjentów");

        patientList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(patientList);

        newButton.setText("Nowy");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edytuj");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Usuń");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        showDataButton.setText("Pokaż dane");
        showDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDataButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(newButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(okButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showDataButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 83, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(newButton)
                .addGap(40, 40, 40)
                .addComponent(editButton)
                .addGap(40, 40, 40)
                .addComponent(deleteButton)
                .addGap(144, 144, 144)
                .addComponent(showDataButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 318, Short.MAX_VALUE)
                .addComponent(okButton)
                .addGap(48, 48, 48))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        NewPatient newPatient = new NewPatient(null, true);
        newPatient.setLocationRelativeTo(this.rootPane);
        newPatient.showDialog();
        loadData();
    }//GEN-LAST:event_newButtonActionPerformed

    private void showDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDataButtonActionPerformed
        int selectedPatientIndex = patientList.getSelectedIndex();
        if(selectedPatientIndex != -1)
        {
            Patient selectedPatient = patientObjectList.get(selectedPatientIndex);
            PatientDataViewDialog patientDataViewDialog = new PatientDataViewDialog(null, true, selectedPatient);
            patientDataViewDialog.setLocationRelativeTo(this.rootPane);
            patientDataViewDialog.showDialog();
        } else {
            JOptionPane.showMessageDialog(this, "Nie wybrano żadnego pacjenta z listy",
                                              "Błąd", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_showDataButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        EntityManager entityManager = Database.getEntityManager();
        int selectedPatientIndex = patientList.getSelectedIndex();
        if(patientList.getSelectedIndex() != -1)
        {
        Patient removingPatient = patientObjectList.get(selectedPatientIndex);
            int selection = JOptionPane.showConfirmDialog(this, "Czy potwierdzasz usuniecie pacjenta " + removingPatient.getFullName()+"?",
                                                    "Potwierdzenie",
                                                    JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(selection == JOptionPane.OK_OPTION)
            {
                if(removingPatient.getPrescriptions().size() != 0 || removingPatient.getAppointments().size() != 0)
                {
                    JOptionPane.showMessageDialog(this, "Nie można usunąć pacjenta, który ma umówione wizyty lub znajduje się na receptach",
                                                "Błąd", JOptionPane.ERROR_MESSAGE);
                } else {
                    var tx = entityManager.getTransaction();
                    tx.begin();
                    entityManager.remove(removingPatient);
                    tx.commit();
                    loadData();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nie wybrano żadnego pacjenta z listy",
                                              "Błąd", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        int selectedPatientIndex = patientList.getSelectedIndex();
        if(selectedPatientIndex != -1)
        {
            Patient selectedPatient = patientObjectList.get(selectedPatientIndex);
            NewPatient newPatientDialog = new NewPatient(null, true, selectedPatient);
            newPatientDialog.setLocationRelativeTo(this.rootPane);
            newPatientDialog.showDialog();
            loadData();
        } else {
            JOptionPane.showMessageDialog(this, "Nie wybrano żadnego pacjenta z listy",
                                              "Błąd", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void loadData(){
        EntityManager entityManager = Database.getEntityManager();
        TypedQuery<Patient> typedQuery = entityManager.createQuery("SELECT p FROM Patient p", Patient.class);
        patientObjectList = typedQuery.getResultList();
        Vector<String> listData = new Vector<String>();
        for(int i=1; i<=patientObjectList.size(); ++i)
        {
            var patient = patientObjectList.get(i-1);
            listData.add(i + ". " + patient.getFullName());
        }
        patientList.setListData(listData);
    }

    public Patient showDialog() {
        loadData();
        setVisible(true);
        int selectedIndex = patientList.getSelectedIndex();
        if(selectedIndex != -1)
            return patientObjectList.get(patientList.getSelectedIndex());
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientListDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientListDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientListDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientListDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PatientListDialog dialog = new PatientListDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    private List<Patient> patientObjectList;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newButton;
    private javax.swing.JButton okButton;
    private javax.swing.JList<String> patientList;
    private javax.swing.JButton showDataButton;
    // End of variables declaration//GEN-END:variables
}
